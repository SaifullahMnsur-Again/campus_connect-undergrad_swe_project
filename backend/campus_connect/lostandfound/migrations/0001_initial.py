# Generated by Django 5.2.1 on 2025-05-15 19:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('universities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoundItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('found_date', models.DateField()),
                ('location', models.CharField(help_text='Specific location within the university', max_length=255)),
                ('status', models.CharField(choices=[('open', 'Open'), ('claimed', 'Claimed'), ('returned', 'Returned'), ('externally_returned', 'Externally Returned')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_found_items', to=settings.AUTH_USER_MODEL)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='found_items', to='universities.university')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='found_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FoundItemClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('claimant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='found_item_claims', to=settings.AUTH_USER_MODEL)),
                ('found_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='lostandfound.founditem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LostItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('lost_date', models.DateField()),
                ('location', models.CharField(help_text='Specific location within the university', max_length=255)),
                ('status', models.CharField(choices=[('open', 'Open'), ('claimed', 'Claimed'), ('found', 'Found'), ('externally_found', 'Externally Found')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_lost_items', to=settings.AUTH_USER_MODEL)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lost_items', to='universities.university')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lost_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ItemMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='lostandfound/media/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'mp4', 'mov'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('found_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media', to='lostandfound.founditem')),
                ('lost_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media', to='lostandfound.lostitem')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='LostItemClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('claimant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lost_item_claims', to=settings.AUTH_USER_MODEL)),
                ('lost_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='lostandfound.lostitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='founditem',
            index=models.Index(fields=['university', 'status'], name='lostandfoun_univers_5275b8_idx'),
        ),
        migrations.AddIndex(
            model_name='founditem',
            index=models.Index(fields=['user'], name='lostandfoun_user_id_874d9e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='founditemclaim',
            unique_together={('found_item', 'claimant')},
        ),
        migrations.AddIndex(
            model_name='lostitem',
            index=models.Index(fields=['university', 'status'], name='lostandfoun_univers_d75787_idx'),
        ),
        migrations.AddIndex(
            model_name='lostitem',
            index=models.Index(fields=['user'], name='lostandfoun_user_id_2e8194_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lostitemclaim',
            unique_together={('lost_item', 'claimant')},
        ),
    ]
